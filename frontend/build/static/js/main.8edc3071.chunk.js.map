{"version":3,"sources":["componets/TaskTable.js","componets/Input.js","componets/Clock.js","componets/BtnsContainer.js","componets/Stopwatch.jsx","componets/Login.js","componets/Register.js","App.js","index.js"],"names":["TaskTable","forwardRef","props","ref","tasks","length","className","tableHeightStyle","height","console","log","slice","reverse","map","task","durHours","duration","hours","durMinutes","minutes","durSeconds","seconds","taskTitle","taskCategory","clientName","Input","onChange","event","value","target","fieldName","name","placeholder","autoComplete","Clock","timer","toString","BtnsContainer","onStart","onDone","onDiscard","startText","onStartDisabled","onDoneDisabled","disabled","onClick","States","btnText","PENDING","STARTED","PAUSED","Stopwatch","user","JSON","parse","localStorage","getItem","useState","userData","setUserData","clockState","setClockState","tableRef","useRef","setTimer","intervalId","setIntervalId","setStartButton","category","client","taskInput","setTaskInput","filter","setFilter","tasksArray","setTasksArray","totalDuration","setTotalDuration","showMessage","messageSuccess","setMessage","handleInput2","prevState","handleFilter","getUserTasks","fetch","method","headers","body","stringify","clientFilter","categoryFilter","then","response","json","data","h","m","s","forEach","td","Math","floor","current","style","setTimeout","getUser","useEffect","to","fname","clearInterval","id","setInterval","userEmail","success","type","list","userCategories","userClients","Login","email","password","form","setForm","onSubmit","preventDefault","message","setItem","history","push","For","href","Register","lname","alert","App","exact","path","component","StopWatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8edc3071.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\n\nconst TaskTable = forwardRef(function TaskTable(props, ref) {\n\tif (props.tasks.length < 1) {\n\t\treturn <h2 className='catch'>No tasks in database</h2>;\n\t}\n\n\tconst tableHeight = props.tasks.length * 35 + 35 + 'px';\n\tconst tableHeightStyle = {\n\t\theight: tableHeight,\n\t};\n\tconsole.log(tableHeightStyle);\n\n\treturn (\n\t\t<div className='table-box' ref={ref}>\n\t\t\t<table className='task-table-container'>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Task</th>\n\t\t\t\t\t\t<th>Category</th>\n\t\t\t\t\t\t<th>Client</th>\n\t\t\t\t\t\t<th>Duration</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{props.tasks\n\t\t\t\t\t\t.slice(0)\n\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t.map(task => {\n\t\t\t\t\t\t\tconst durHours = `0${task.duration.hours}`.slice(-2);\n\t\t\t\t\t\t\tconst durMinutes = `0${task.duration.minutes}`.slice(-2);\n\t\t\t\t\t\t\tconst durSeconds = `0${task.duration.seconds}`.slice(-2);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>{task.taskTitle}</td>\n\t\t\t\t\t\t\t\t\t<td>{task.taskCategory}</td>\n\t\t\t\t\t\t\t\t\t<td>{task.clientName}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{durHours}:{durMinutes}:{durSeconds}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n});\n\nexport default TaskTable;\n","import React from 'react';\n\nfunction Input(props) {\n\tfunction handleInput(event) {\n\t\tconsole.log('handleInput');\n\t\tconst value = event.target.value;\n\t\tconst fieldName = event.target.name;\n\n\t\tprops.onChange && props.onChange(fieldName, value);\n\t}\n\treturn (\n\t\t<input onChange={handleInput} name={props.name} placeholder={props.placeholder} value={props.value} autoComplete='off' />\n\t);\n}\n\nexport default Input;\n","import React from 'react';\n\nfunction Clock(props) {\n\tconst { timer } = props;\n\treturn (\n\t\t<div className='digits-container'>\n\t\t\t<div className='digits'>\n\t\t\t\t{('0' + timer.hours.toString()).slice(-2)}:{('0' + timer.minutes.toString()).slice(-2)}:\n\t\t\t\t{('0' + timer.seconds.toString()).slice(-2)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Clock;\n","import React from 'react';\n\nfunction BtnsContainer(props) {\n\tconst { onStart, onDone, onDiscard, startText, onStartDisabled, onDoneDisabled } = props;\n\n\treturn (\n\t\t<div className='button-container'>\n\t\t\t<button className='control-btn start-button' disabled={onStartDisabled} onClick={onStart}>\n\t\t\t\t{startText}\n\t\t\t</button>\n\t\t\t<button className='control-btn done-button' disabled={onDoneDisabled} onClick={onDone}>\n\t\t\t\tDone\n\t\t\t</button>\n\t\t\t<button onClick={onDiscard} className='control-btn reset-button'>\n\t\t\t\tDiscard\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default BtnsContainer;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { Redirect } from 'react-router-dom';\nimport TaskTable from './TaskTable';\n\nimport Input from './Input';\nimport Clock from './Clock';\nimport BtnsContainer from './BtnsContainer';\n\nconst States = {\n\tPENDING: 'PENDING',\n\tSTARTED: 'STARTED',\n\tPAUSED: 'PAUSED',\n};\n\nconst btnText = {\n\tPENDING: 'Start',\n\tSTARTED: 'Pause',\n\tPAUSED: 'Resume',\n};\n\nfunction Stopwatch() {\n\t// set initial state for stopwatch\n\tconst user = JSON.parse(localStorage.getItem('loggedinUser'));\n\tconst [userData, setUserData] = useState(null);\n\tconst [clockState, setClockState] = useState(States.PENDING);\n\tconst tableRef = useRef(null);\n\t// console.log(\"user\", user);\n\n\tconst [timer, setTimer] = useState({\n\t\thours: 0,\n\t\tminutes: 0,\n\t\tseconds: 0,\n\t});\n\t// set the intervalid to null\n\tconst [intervalId, setIntervalId] = useState(null);\n\n\tconst [startButton, setStartButton] = useState('Start');\n\t// set input fields to empty\n\tconst [taskInput, setTaskInput] = useState({\n\t\ttask: '',\n\t\tcategory: '',\n\t\tclient: '',\n\t});\n\n\tconst [filter, setFilter] = useState({\n\t\tcategory: '',\n\t\tclient: '',\n\t});\n\n\tconst [tasksArray, setTasksArray] = useState([]);\n\tconst [totalDuration, setTotalDuration] = useState({\n\t\thours: 0,\n\t\tminutes: 0,\n\t\tseconds: 0,\n\t});\n\n\tconst [message, setMessage] = useState({\n\t\tshowMessage: false,\n\t\tmessageSuccess: false,\n\t});\n\n\t// Sets the states based on user inputs\n\tfunction handleInput(event) {\n\t\tconst value = event.target.value;\n\t\tconst fieldName = event.target.name;\n\t\tsetTaskInput(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[fieldName]: value,\n\t\t\t};\n\t\t});\n\t}\n\tfunction handleInput2(name, value) {\n\t\tconsole.log('handleInput2', name, value);\n\t\tsetTaskInput(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction handleFilter(event) {\n\t\tconst value = event.target.value;\n\t\tconst fieldName = event.target.name;\n\t\tsetFilter(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[fieldName]: value,\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction watchToggle() {\n\t\tmessageClear();\n\t\tif (!intervalId) {\n\t\t\t// start timer\n\t\t\tsetClockState(States.STARTED);\n\t\t\tsetStartButton('Pause');\n\t\t\tconst id = setInterval(() => {\n\t\t\t\tsetTimer(prevState => {\n\t\t\t\t\tlet minutes = prevState.minutes;\n\t\t\t\t\tlet seconds = prevState.seconds;\n\t\t\t\t\tlet hours = prevState.hours;\n\n\t\t\t\t\tif (seconds === 59) {\n\t\t\t\t\t\tseconds = 0;\n\t\t\t\t\t\tminutes++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseconds++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (minutes === 59) {\n\t\t\t\t\t\tminutes = 0;\n\t\t\t\t\t\thours++;\n\t\t\t\t\t}\n\t\t\t\t\treturn { seconds, minutes, hours };\n\t\t\t\t});\n\t\t\t}, 1);\n\n\t\t\t//  save interval id\n\t\t\tsetIntervalId(id);\n\t\t} else {\n\t\t\t// pause timer\n\t\t\tclearInterval(intervalId);\n\t\t\tsetStartButton('Resume');\n\t\t\tsetClockState(States.PAUSED);\n\t\t\t//   remove internal id from stae\n\t\t\tsetIntervalId(null);\n\t\t}\n\t}\n\n\tfunction watchDone() {\n\t\tclearInterval(intervalId);\n\t\tsetIntervalId(null);\n\t\tsetStartButton('Start');\n\t\tsetClockState(States.PENDING);\n\t\t// send request to server\n\t\tfetch('http://localhost:5000/tasks/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json', // body type\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuserEmail: user,\n\t\t\t\ttaskTitle: taskInput.task,\n\t\t\t\ttaskCategory: taskInput.category,\n\t\t\t\tclientName: taskInput.client,\n\t\t\t\t// duration: timer.seconds * 1000 + timer.minutes * 60000 + timer.hours * 3600000,\n\t\t\t\tduration: {\n\t\t\t\t\tseconds: timer.seconds,\n\t\t\t\t\tminutes: timer.minutes,\n\t\t\t\t\thours: timer.hours,\n\t\t\t\t},\n\t\t\t}),\n\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\t// run after get response from server\n\t\t\t\tconsole.log('res', response);\n\t\t\t\treturn response.json(); // wait to body data from server (PROMISE)\n\t\t\t})\n\t\t\t.then(function (body) {\n\t\t\t\t//   run after all body back from server\n\t\t\t\tconsole.log(body);\n\n\t\t\t\tsetMessage({\n\t\t\t\t\tshowMessage: true,\n\t\t\t\t\tmessageSuccess: body.success,\n\t\t\t\t});\n\t\t\t\tsetTaskInput({\n\t\t\t\t\ttask: '',\n\t\t\t\t\tcategory: '',\n\t\t\t\t\tclient: '',\n\t\t\t\t});\n\t\t\t\tsetTimer({\n\t\t\t\t\thours: 0,\n\t\t\t\t\tminutes: 0,\n\t\t\t\t\tseconds: 0,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(getUserTasks)\n\t\t\t.then(getUser);\n\n\t\tfetch('http://localhost:5000/users/updateuser', {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json', // body type\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcategory: taskInput.category,\n\t\t\t\tclient: taskInput.client,\n\t\t\t\tuserEmail: user,\n\t\t\t}),\n\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\t// run after get response from server\n\t\t\t\tconsole.log('res', response);\n\t\t\t\treturn response.json(); // wait to body data from server (PROMISE)\n\t\t\t})\n\t\t\t.then(function (body) {\n\t\t\t\t//   run after all body back from server\n\t\t\t\tconsole.log(body);\n\t\t\t});\n\t}\n\n\tfunction watchReset() {\n\t\tclearInterval(intervalId);\n\t\tsetIntervalId(null);\n\t\tsetStartButton('Start');\n\t\tsetClockState(States.PENDING);\n\t\tsetTimer({\n\t\t\thours: 0,\n\t\t\tminutes: 0,\n\t\t\tseconds: 0,\n\t\t});\n\t\tsetTaskInput({\n\t\t\ttask: '',\n\t\t\tcategory: '',\n\t\t\tclient: '',\n\t\t});\n\t}\n\n\tfunction messageClear() {\n\t\tsetMessage({\n\t\t\tshowMessage: false,\n\t\t\tmessageSuccess: false,\n\t\t});\n\t}\n\tfunction getUserTasks() {\n\t\tfetch('http://localhost:5000/tasks/' + user, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json', // body type\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tclientFilter: filter.client,\n\t\t\t\tcategoryFilter: filter.category,\n\t\t\t}),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tlet h = 0;\n\t\t\t\tlet m = 0;\n\t\t\t\tlet s = 0;\n\n\t\t\t\tdata.forEach(task => {\n\t\t\t\t\th = h + task.duration.hours;\n\t\t\t\t\tm = m + task.duration.minutes;\n\t\t\t\t\ts = s + task.duration.seconds;\n\t\t\t\t});\n\n\t\t\t\tfunction sumTotDur(hrs, mins, secs) {\n\t\t\t\t\tm = Math.floor(m + s / 60);\n\t\t\t\t\ts = s % 60;\n\t\t\t\t\th = Math.floor(h + m / 60);\n\t\t\t\t\tm = m % 60;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\thours: h,\n\t\t\t\t\t\tminutes: m,\n\t\t\t\t\t\tseconds: s,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst td = sumTotDur(h, m, s);\n\n\t\t\t\tconsole.log('td', td);\n\n\t\t\t\tsetTotalDuration(td);\n\n\t\t\t\tconsole.log(totalDuration);\n\t\t\t\tconsole.log('tableRef.current', tableRef.current);\n\n\t\t\t\tif (data.length >= tasksArray.length) {\n\t\t\t\t\tsetTasksArray(data);\n\n\t\t\t\t\ttableRef.current && (tableRef.current.style.height = data.length * 35 + 35 + 'px');\n\t\t\t\t} else {\n\t\t\t\t\ttableRef.current && (tableRef.current.style.height = data.length * 35 + 35 + 'px');\n\t\t\t\t\tsetTimeout(() => setTasksArray(data), 500);\n\t\t\t\t}\n\t\t\t\t// setTasksArray(data);\n\t\t\t});\n\t}\n\n\t// run code after every render\n\n\tfunction getUser() {\n\t\tfetch('http://localhost:5000/users/getfname/' + user)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tsetUserData(data);\n\t\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log('AAAA', tableRef);\n\n\t\tgetUserTasks();\n\n\t\tgetUser();\n\t}, [filter]);\n\n\tif (!user) {\n\t\t// if no user in local storage redirect to login\n\t\treturn <Redirect to='/login' />;\n\t}\n\n\tconst onDoneDisabled =\n\t\t!taskInput.task ||\n\t\t!taskInput.category ||\n\t\t!taskInput.client ||\n\t\t(timer.seconds === 0 && timer.minutes === 0 && timer.hours === 0);\n\n\tconst onStartDisabled = !taskInput.task || !taskInput.category || !taskInput.client;\n\n\tconsole.log(clockState);\n\treturn (\n\t\t<div>\n\t\t\t{console.log(tasksArray)}\n\t\t\t<header className='watch-header'>\n\t\t\t\t<h1 className='welcome'>Hi {userData && userData.fname}, get That work done!</h1>\n\t\t\t\t<p className='instructions'>\n\t\t\t\t\tEnter a new task and hit that \"Start\" button, you can always pause and resume, and when your finished with your\n\t\t\t\t\ttask hit \"Done\".\n\t\t\t\t</p>\n\t\t\t</header>\n\n\t\t\t<Clock timer={timer} />\n\t\t\t<BtnsContainer\n\t\t\t\tonStart={watchToggle}\n\t\t\t\tonDone={watchDone}\n\t\t\t\tonDiscard={watchReset}\n\t\t\t\tstartText={btnText[clockState]}\n\t\t\t\tonStartDisabled={onStartDisabled}\n\t\t\t\tonDoneDisabled={onDoneDisabled}\n\t\t\t/>\n\n\t\t\t<div className='inputs-container'>\n\t\t\t\t<Input onChange={handleInput2} name='task' placeholder='Enter task' value={taskInput.task} />\n\t\t\t\t<Input\n\t\t\t\t\tonChange={handleInput2}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='category'\n\t\t\t\t\tlist='categoryList'\n\t\t\t\t\tplaceholder='Category'\n\t\t\t\t\tvalue={taskInput.category}\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\n\t\t\t\t<datalist id='categoryList'>\n\t\t\t\t\t{userData &&\n\t\t\t\t\t\tuserData.userCategories.map(category => {\n\t\t\t\t\t\t\treturn <option>{category}</option>;\n\t\t\t\t\t\t})}\n\t\t\t\t</datalist>\n\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\tname='client'\n\t\t\t\t\tlist='clientList'\n\t\t\t\t\tplaceholder='Enter Client'\n\t\t\t\t\tvalue={taskInput.client}\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\n\t\t\t\t<datalist id='clientList'>\n\t\t\t\t\t{userData &&\n\t\t\t\t\t\tuserData.userClients.map(client => {\n\t\t\t\t\t\t\treturn <option>{client}</option>;\n\t\t\t\t\t\t})}\n\t\t\t\t</datalist>\n\t\t\t</div>\n\n\t\t\t<h2>Search By</h2>\n\n\t\t\t<div className='filterContainer'>\n\t\t\t\t{/* <input onChange={handleInput} name='task' placeholder='Enter task' value={taskInput.task} autoComplete='off'></input> */}\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleFilter}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='category'\n\t\t\t\t\tlist='categoryList'\n\t\t\t\t\tplaceholder='Category'\n\t\t\t\t\tvalue={filter.category}\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\n\t\t\t\t<datalist id='categoryList'>\n\t\t\t\t\t{userData &&\n\t\t\t\t\t\tuserData.userCategories.map(category => {\n\t\t\t\t\t\t\treturn <option>{category}</option>;\n\t\t\t\t\t\t})}\n\t\t\t\t</datalist>\n\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleFilter}\n\t\t\t\t\tname='client'\n\t\t\t\t\tlist='clientList'\n\t\t\t\t\tplaceholder='Client'\n\t\t\t\t\tvalue={filter.client}\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\n\t\t\t\t<datalist id='clientList'>\n\t\t\t\t\t{userData &&\n\t\t\t\t\t\tuserData.userClients.map(client => {\n\t\t\t\t\t\t\treturn <option>{client}</option>;\n\t\t\t\t\t\t})}\n\t\t\t\t</datalist>\n\t\t\t</div>\n\t\t\t<TaskTable tasks={tasksArray} ref={tableRef} />\n\t\t\t<h3>\n\t\t\t\tTotal task duration {('0' + totalDuration.hours.toString()).slice(-2)}:\n\t\t\t\t{('0' + totalDuration.minutes.toString()).slice(-2)}:{('0' + totalDuration.seconds.toString()).slice(-2)}\n\t\t\t</h3>\n\t\t</div>\n\t);\n}\n\nexport default Stopwatch;\n","import React, { useState } from \"react\";\n\n// 1) filll form\n// 2) send to server\n// 3) if valid data - redicert to home page, and save user in local storage\n// if not valid data - show error message\n\nfunction Login(props) {\n   console.log(\"login props\", props);\n\n   const [form, setForm] = useState({ email: \"\", password: \"\" });\n   function onSubmit(event) {\n      // prevet default form behavior\n      event.preventDefault();\n      const email = event.target.email.value;\n      const password = event.target.password.value;\n\n      // validate data in server (Fetch)\n      fetch(\"http://localhost:5000/users/login\", {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\", // body type\n         },\n         body: JSON.stringify({\n            email,\n            password,\n         }),\n      })\n         .then(function (response) {\n            // run after get response from server\n            console.log(\"res\", response);\n            return response.json(); // wait to body data from server (PROMISE)\n         })\n         .then(function (body) {\n            //   run after all body back from server\n            if (body.message === \"Success\") {\n               localStorage.setItem(\"loggedinUser\", JSON.stringify(email));\n               props.history.push(\"/\");\n            } else {\n               props.history.push(\"/register\");\n            }\n            console.log(body);\n         });\n      // if success\n\n      // save user form server in local storage\n\n      // redirect to home\n   }\n\n   function onChange(event) {\n      {\n         const { name, value } = event.target;\n         setForm({ ...form, [name]: value });\n      }\n   }\n\n   console.log(\"form\", form);\n\n   return (\n      <div>\n         <header className='log-header'>\n            <h1 className='welcome'>Welcome To StopWatch</h1>\n            <h2 className='catch'>Time Mangement for the professional freelancer</h2>\n         </header>\n         <div className='login-container'>\n            <h2 className='please'>Please Sign In</h2>\n\n            <form onSubmit={onSubmit}>\n               <label For='loginemail'>Email</label>\n               <input className='user-login' id='loginemail' value={form.email} name='email' onChange={onChange} /> <br />\n               <label For='loginpassword'>Password</label>\n               <input\n                  className='user-login'\n                  id='loginpassword'\n                  type='password'\n                  name='password'\n                  value={form.password}\n                  onChange={onChange}\n               />{\" \"}\n               <br />\n               <button className='control-btn start-button login-btn' type='sumbit'>\n                  Log in\n               </button>\n               <br />\n               <p>Or</p>\n               <a href='http://localhost:3000/register'>Register as a new user</a>\n            </form>\n         </div>\n      </div>\n   );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\n\n// 1) filll form\n// 2) send to server\n// 3) if valid data - redicert to home page, and save user in local storage\n// if not valid data - show error message\n\nfunction Register(props) {\n   console.log(\"Register props\", props);\n\n   const [form, setForm] = useState({ fname: \"\", lname: \"\", email: \"\", password: \"\" });\n   function onSubmit(event) {\n      // prevet default form behavior\n      event.preventDefault();\n      const fname = event.target.fname.value;\n      const lname = event.target.lname.value;\n      const email = event.target.email.value;\n      const password = event.target.password.value;\n\n      // validate data in server (Fetch)\n      fetch(\"http://localhost:5000/users/register\", {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\", // body type\n         },\n         body: JSON.stringify({\n            fname,\n            lname,\n            email,\n            password,\n         }),\n      })\n         .then(function (response) {\n            // run after get response from server\n            console.log(\"res\", response);\n            return response.json(); // wait to body data from server (PROMISE)\n         })\n         .then(function (body) {\n            //   run after all body back from server\n            if (body.message === \"Success\") {\n               localStorage.setItem(\"loggedinUser\", JSON.stringify(email));\n               props.history.push(\"/\");\n            } else {\n               alert(body.message);\n            }\n            console.log(body);\n         });\n      // if success\n\n      // save user form server in local storage\n\n      // redirect to home\n   }\n\n   function onChange(event) {\n      {\n         const { name, value } = event.target;\n         setForm({ ...form, [name]: value });\n      }\n   }\n\n   console.log(\"form\", form);\n\n   return (\n      <div>\n         <header className='log-header'>\n            <h1 className='welcome'>Welcome To StopWatch</h1>\n            <h2 className='catch'>Time Mangement for the professional freelancer</h2>\n         </header>\n         <div className='login-container'>\n            <h2 className='please'>Register below</h2>\n\n            <form onSubmit={onSubmit}>\n               <label For='loginfnane'>First Name</label>\n               <input className='user-login' id='fname' value={form.fname} name='fname' onChange={onChange} /> <br />\n               <label For='loginlnane'>Last Name</label>\n               <input className='user-login' id='lname' value={form.lname} name='lname' onChange={onChange} /> <br /> <br />\n               <br />\n               <label For='loginemail'>Email</label>\n               <input className='user-login' id='loginemail' value={form.email} name='email' onChange={onChange} /> <br />\n               <label For='loginpassword'>Password</label>\n               <input\n                  className='user-login'\n                  id='loginpassword'\n                  type='password'\n                  name='password'\n                  value={form.password}\n                  onChange={onChange}\n               />{\" \"}\n               <br />\n               <button className='control-btn start-button login-btn' type='sumbit'>\n                  Register\n               </button>\n               <br />\n               <p>Or</p>\n               <a href='http://localhost:3000/register'>Log In as existing user</a>\n            </form>\n         </div>\n      </div>\n   );\n}\n\nexport default Register;\n","import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport StopWatch from \"./componets/Stopwatch\";\n\nimport Login from \"./componets/Login\";\n\nimport Register from \"./componets/Register\";\n\nfunction App() {\n   return (\n      <div>\n         <div>\n            <Route exact path='/' component={StopWatch} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/register' component={Register} />\n         </div>\n      </div>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\n// BrowserRouter - listen to url changes\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}