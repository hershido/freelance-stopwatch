{"ast":null,"code":"var _jsxFileName = \"/Users/Dodo/Desktop/StopWatch/frontend/src/componets/Stopwatch.js\";\nimport React, { useState } from \"react\";\n\nfunction Stopwatch() {\n  const [timer, setTimer] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  const [intervalId, setIntervalId] = useState(null);\n\n  function watchStop() {\n    clearInterval(intervalId);\n  }\n\n  function watchGo() {\n    const id = setInterval(() => {\n      setTimer(prevState => {\n        let minutes = prevState.minutes;\n        let seconds = prevState.seconds;\n        let hours = prevState.hours;\n\n        if (seconds === 59) {\n          seconds = 0;\n          minutes++;\n        } else {\n          seconds++;\n        }\n\n        if (minutes === 59) {\n          minutes = 0;\n          hours++;\n        }\n\n        return {\n          seconds,\n          minutes,\n          hours\n        };\n      });\n    }, 10); //  save interval id\n\n    setIntervalId(id);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, timer.hours, \":\", timer.minutes, \":\", timer.seconds), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: watchGo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, intervalId ? \"pause\" : \"start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: watchStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/Dodo/Desktop/StopWatch/frontend/src/componets/Stopwatch.js"],"names":["React","useState","Stopwatch","timer","setTimer","hours","minutes","seconds","intervalId","setIntervalId","watchStop","clearInterval","watchGo","id","setInterval","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAE,CAD0B;AAEjCC,IAAAA,OAAO,EAAE,CAFwB;AAGjCC,IAAAA,OAAO,EAAE;AAHwB,GAAD,CAAlC;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;;AAEA,WAASS,SAAT,GAAqB;AACnBC,IAAAA,aAAa,CAACH,UAAD,CAAb;AACD;;AAED,WAASI,OAAT,GAAmB;AACjB,UAAMC,EAAE,GAAGC,WAAW,CAAC,MAAM;AAC3BV,MAAAA,QAAQ,CAAEW,SAAD,IAAe;AACtB,YAAIT,OAAO,GAAGS,SAAS,CAACT,OAAxB;AACA,YAAIC,OAAO,GAAGQ,SAAS,CAACR,OAAxB;AACA,YAAIF,KAAK,GAAGU,SAAS,CAACV,KAAtB;;AAEA,YAAIE,OAAO,KAAK,EAAhB,EAAoB;AAClBA,UAAAA,OAAO,GAAG,CAAV;AACAD,UAAAA,OAAO;AACR,SAHD,MAGO;AACLC,UAAAA,OAAO;AACR;;AAED,YAAID,OAAO,KAAK,EAAhB,EAAoB;AAClBA,UAAAA,OAAO,GAAG,CAAV;AACAD,UAAAA,KAAK;AACN;;AACD,eAAO;AAAEE,UAAAA,OAAF;AAAWD,UAAAA,OAAX;AAAoBD,UAAAA;AAApB,SAAP;AACD,OAjBO,CAAR;AAkBD,KAnBqB,EAmBnB,EAnBmB,CAAtB,CADiB,CAsBjB;;AACAI,IAAAA,aAAa,CAACI,EAAD,CAAb;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACE,KADT,OACiBF,KAAK,CAACG,OADvB,OACiCH,KAAK,CAACI,OADvC,CADF,eAIE;AAAQ,IAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,UAAU,GAAG,OAAH,GAAa,OAAlD,CAJF,eAKE;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF;AAUD;;AAED,eAAeR,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Stopwatch() {\n  const [timer, setTimer] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  const [intervalId, setIntervalId] = useState(null);\n\n  function watchStop() {\n    clearInterval(intervalId);\n  }\n\n  function watchGo() {\n    const id = setInterval(() => {\n      setTimer((prevState) => {\n        let minutes = prevState.minutes;\n        let seconds = prevState.seconds;\n        let hours = prevState.hours;\n\n        if (seconds === 59) {\n          seconds = 0;\n          minutes++;\n        } else {\n          seconds++;\n        }\n\n        if (minutes === 59) {\n          minutes = 0;\n          hours++;\n        }\n        return { seconds, minutes, hours };\n      });\n    }, 10);\n\n    //  save interval id\n    setIntervalId(id);\n  }\n\n  return (\n    <div>\n      <h1>\n        {timer.hours}:{timer.minutes}:{timer.seconds}\n      </h1>\n      <button onClick={watchGo}>{intervalId ? \"pause\" : \"start\"}</button>\n      <button onClick={watchStop}>Done</button>\n      <button>Reset</button>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}