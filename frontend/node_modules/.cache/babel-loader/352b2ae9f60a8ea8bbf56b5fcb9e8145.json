{"ast":null,"code":"var _jsxFileName = \"/Users/Dodo/Desktop/StopWatch/frontend/src/componets/Login.js\";\nimport React, { useState } from \"react\"; // 1) filll form\n// 2) send to server\n// 3) if valid data - redicert to home page, and save user in local storage\n// if not valid data - show error message\n\nfunction Login(props) {\n  console.log(\"login props\", props);\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  function onSubmit(event) {\n    // prevet default form behavior\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value; // validate data in server (Fetch)\n\n    fetch(\"http://localhost:5000/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // body type\n\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(function (response) {\n      // run after get response from server\n      console.log(\"res\", response);\n      return response.json(); // wait to body data from server (PROMISE)\n    }).then(function (body) {\n      //   run after all body back from server\n      if (body.message === \"Success\") {\n        localStorage.setItem(\"loggedinUser\", JSON.stringify(email));\n        props.history.push(\"/\");\n      } else {\n        props.history.push(\"/register\");\n      }\n\n      console.log(body);\n    }); // if success\n    // save user form server in local storage\n    // redirect to home\n  }\n\n  function onChange(event) {\n    {\n      const {\n        name,\n        value\n      } = event.target;\n      setForm({ ...form,\n        [name]: value\n      });\n    }\n  }\n\n  console.log(\"form\", form);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, \"email: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: form.email,\n    name: \"email\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 82\n    }\n  }), \"password \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: form.password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 106\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"sumbit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"sumbit\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/Dodo/Desktop/StopWatch/frontend/src/componets/Login.js"],"names":["React","useState","Login","props","console","log","form","setForm","email","password","onSubmit","event","preventDefault","target","value","fetch","method","headers","body","JSON","stringify","then","response","json","message","localStorage","setItem","history","push","onChange","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// 1) filll form\n// 2) send to server\n// 3) if valid data - redicert to home page, and save user in local storage\n// if not valid data - show error message\n\nfunction Login(props) {\n   console.log(\"login props\", props);\n\n   const [form, setForm] = useState({ email: \"\", password: \"\" });\n   function onSubmit(event) {\n      // prevet default form behavior\n      event.preventDefault();\n      const email = event.target.email.value;\n      const password = event.target.password.value;\n\n      // validate data in server (Fetch)\n      fetch(\"http://localhost:5000/users/login\", {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\", // body type\n         },\n         body: JSON.stringify({\n            email,\n            password,\n         }),\n      })\n         .then(function (response) {\n            // run after get response from server\n            console.log(\"res\", response);\n            return response.json(); // wait to body data from server (PROMISE)\n         })\n         .then(function (body) {\n            //   run after all body back from server\n            if (body.message === \"Success\") {\n               localStorage.setItem(\"loggedinUser\", JSON.stringify(email));\n               props.history.push(\"/\");\n            } else {\n               props.history.push(\"/register\");\n            }\n            console.log(body);\n         });\n      // if success\n\n      // save user form server in local storage\n\n      // redirect to home\n   }\n\n   function onChange(event) {\n      {\n         const { name, value } = event.target;\n         setForm({ ...form, [name]: value });\n      }\n   }\n\n   console.log(\"form\", form);\n\n   return (\n      <div>\n         <form onSubmit={onSubmit}>\n            email: <input value={form.email} name='email' onChange={onChange} /> <br />\n            password <input type='password' name='password' value={form.password} onChange={onChange} /> <br />\n            <button type='sumbit'>sumbit</button>\n         </form>\n      </div>\n   );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}