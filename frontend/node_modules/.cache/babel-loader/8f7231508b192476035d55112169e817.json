{"ast":null,"code":"var _jsxFileName = \"/Users/Dodo/Desktop/StopWatch/frontend/src/componets/Stopwatch.js\";\nimport React, { useState } from \"react\";\n\nfunction Stopwatch() {\n  const [timer, setTimer] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n\n  function watchGo() {\n    setInterval(() => {\n      setTimer(prevState => {\n        let minutes = prevState.minutes;\n        let seconds = prevState.seconds;\n        let hours = prevState.hours;\n\n        if (seconds === 59) {\n          seconds = 0;\n          minutes++;\n        } else {\n          seconds++;\n        }\n\n        if (minutes === 59) {\n          minutes = 0;\n          hours++;\n        }\n\n        return {\n          seconds,\n          minutes,\n          hours\n        };\n      }); // if (minCounter < 59) {\n      //   minCounter++;\n      // } else {\n      //   minCounter = 0;\n      //   hourCounter++;\n      // }\n      // console.log(minCounter + \" \", secCounter);\n    }, 10);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, timer.hours, \":\", timer.minutes, \":\", timer.seconds), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: watchGo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/Dodo/Desktop/StopWatch/frontend/src/componets/Stopwatch.js"],"names":["React","useState","Stopwatch","timer","setTimer","hours","minutes","seconds","watchGo","setInterval","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAE,CAD0B;AAEjCC,IAAAA,OAAO,EAAE,CAFwB;AAGjCC,IAAAA,OAAO,EAAE;AAHwB,GAAD,CAAlC;;AAMA,WAASC,OAAT,GAAmB;AACjBC,IAAAA,WAAW,CAAC,MAAM;AAChBL,MAAAA,QAAQ,CAAEM,SAAD,IAAe;AACtB,YAAIJ,OAAO,GAAGI,SAAS,CAACJ,OAAxB;AACA,YAAIC,OAAO,GAAGG,SAAS,CAACH,OAAxB;AACA,YAAIF,KAAK,GAAGK,SAAS,CAACL,KAAtB;;AAEA,YAAIE,OAAO,KAAK,EAAhB,EAAoB;AAClBA,UAAAA,OAAO,GAAG,CAAV;AACAD,UAAAA,OAAO;AACR,SAHD,MAGO;AACLC,UAAAA,OAAO;AACR;;AAED,YAAID,OAAO,KAAK,EAAhB,EAAoB;AAClBA,UAAAA,OAAO,GAAG,CAAV;AACAD,UAAAA,KAAK;AACN;;AACD,eAAO;AAAEE,UAAAA,OAAF;AAAWD,UAAAA,OAAX;AAAoBD,UAAAA;AAApB,SAAP;AACD,OAjBO,CAAR,CADgB,CAmBhB;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,KA3BU,EA2BR,EA3BQ,CAAX;AA4BD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACE,KADT,OACiBF,KAAK,CAACG,OADvB,OACiCH,KAAK,CAACI,OADvC,CADF,eAIE;AAAQ,IAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF;AAUD;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Stopwatch() {\n  const [timer, setTimer] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  function watchGo() {\n    setInterval(() => {\n      setTimer((prevState) => {\n        let minutes = prevState.minutes;\n        let seconds = prevState.seconds;\n        let hours = prevState.hours;\n\n        if (seconds === 59) {\n          seconds = 0;\n          minutes++;\n        } else {\n          seconds++;\n        }\n\n        if (minutes === 59) {\n          minutes = 0;\n          hours++;\n        }\n        return { seconds, minutes, hours };\n      });\n      // if (minCounter < 59) {\n      //   minCounter++;\n      // } else {\n      //   minCounter = 0;\n      //   hourCounter++;\n      // }\n\n      // console.log(minCounter + \" \", secCounter);\n    }, 10);\n  }\n\n  return (\n    <div>\n      <h1>\n        {timer.hours}:{timer.minutes}:{timer.seconds}\n      </h1>\n      <button onClick={watchGo}>Start</button>\n      <button>Stop</button>\n      <button>Reset</button>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}