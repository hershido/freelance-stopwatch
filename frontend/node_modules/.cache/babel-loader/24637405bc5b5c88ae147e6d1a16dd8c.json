{"ast":null,"code":"import _defineProperty from\"/Users/Dodo/Desktop/Web development/StopWatch/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Dodo/Desktop/Web development/StopWatch/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/Dodo/Desktop/Web development/StopWatch/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// 1) filll form\n// 2) send to server\n// 3) if valid data - redicert to home page, and save user in local storage\n// if not valid data - show error message\nfunction Login(props){console.log(\"login props\",props);var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];function onSubmit(event){// prevet default form behavior\nevent.preventDefault();var email=event.target.email.value;var password=event.target.password.value;// validate data in server (Fetch)\nfetch(\"http://localhost:5000/users/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"// body type\n},body:JSON.stringify({email:email,password:password})}).then(function(response){// run after get response from server\nconsole.log(\"res\",response);return response.json();// wait to body data from server (PROMISE)\n}).then(function(body){//   run after all body back from server\nif(body.message===\"Success\"){localStorage.setItem(\"loggedinUser\",JSON.stringify(email));props.history.push(\"/\");}else{props.history.push(\"/register\");}console.log(body);});// if success\n// save user form server in local storage\n// redirect to home\n}function onChange(event){{var _event$target=event.target,name=_event$target.name,value=_event$target.value;setForm(_objectSpread(_objectSpread({},form),{},_defineProperty({},name,value)));}}console.log(\"form\",form);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"header\",{className:\"log-header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"welcome\"},\"Welcome To StopWatch\"),/*#__PURE__*/React.createElement(\"h2\",{className:\"catch\"},\"Time Mangement for the professional freelancer\")),/*#__PURE__*/React.createElement(\"div\",{className:\"login-container\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"please\"},\"Please Sign In\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"label\",{For:\"loginemail\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{className:\"user-login\",id:\"loginemail\",value:form.email,name:\"email\",onChange:onChange}),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",{For:\"loginpassword\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{className:\"user-login\",id:\"loginpassword\",type:\"password\",name:\"password\",value:form.password,onChange:onChange}),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"control-btn start-button login-btn\",type:\"sumbit\"},\"Log in\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Or\"),/*#__PURE__*/React.createElement(\"a\",{href:\"http://localhost:3000/register\"},\"Register as a new user\"))));}export default Login;","map":{"version":3,"sources":["/Users/Dodo/Desktop/Web development/StopWatch/backend/frontend/src/componets/Login.js"],"names":["React","useState","Login","props","console","log","email","password","form","setForm","onSubmit","event","preventDefault","target","value","fetch","method","headers","body","JSON","stringify","then","response","json","message","localStorage","setItem","history","push","onChange","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// 1) filll form\n// 2) send to server\n// 3) if valid data - redicert to home page, and save user in local storage\n// if not valid data - show error message\n\nfunction Login(props) {\n   console.log(\"login props\", props);\n\n   const [form, setForm] = useState({ email: \"\", password: \"\" });\n   function onSubmit(event) {\n      // prevet default form behavior\n      event.preventDefault();\n      const email = event.target.email.value;\n      const password = event.target.password.value;\n\n      // validate data in server (Fetch)\n      fetch(\"http://localhost:5000/users/login\", {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\", // body type\n         },\n         body: JSON.stringify({\n            email,\n            password,\n         }),\n      })\n         .then(function (response) {\n            // run after get response from server\n            console.log(\"res\", response);\n            return response.json(); // wait to body data from server (PROMISE)\n         })\n         .then(function (body) {\n            //   run after all body back from server\n            if (body.message === \"Success\") {\n               localStorage.setItem(\"loggedinUser\", JSON.stringify(email));\n               props.history.push(\"/\");\n            } else {\n               props.history.push(\"/register\");\n            }\n            console.log(body);\n         });\n      // if success\n\n      // save user form server in local storage\n\n      // redirect to home\n   }\n\n   function onChange(event) {\n      {\n         const { name, value } = event.target;\n         setForm({ ...form, [name]: value });\n      }\n   }\n\n   console.log(\"form\", form);\n\n   return (\n      <div>\n         <header className='log-header'>\n            <h1 className='welcome'>Welcome To StopWatch</h1>\n            <h2 className='catch'>Time Mangement for the professional freelancer</h2>\n         </header>\n         <div className='login-container'>\n            <h2 className='please'>Please Sign In</h2>\n\n            <form onSubmit={onSubmit}>\n               <label For='loginemail'>Email</label>\n               <input className='user-login' id='loginemail' value={form.email} name='email' onChange={onChange} /> <br />\n               <label For='loginpassword'>Password</label>\n               <input\n                  className='user-login'\n                  id='loginpassword'\n                  type='password'\n                  name='password'\n                  value={form.password}\n                  onChange={onChange}\n               />{\" \"}\n               <br />\n               <button className='control-btn start-button login-btn' type='sumbit'>\n                  Log in\n               </button>\n               <br />\n               <p>Or</p>\n               <a href='http://localhost:3000/register'>Register as a new user</a>\n            </form>\n         </div>\n      </div>\n   );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}